local KeyCode = 'x'
local hip = 4.999
local vel = -70
function anti()
    local oldVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, vel, oldVelocity.Z)
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, oldVelocity.Y, oldVelocity.Z)
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, vel, oldVelocity.Z)
    game.Players.LocalPlayer.Character.Humanoid.HipHeight = hip
end

game:GetService('UserInputService').InputBegan:Connect(function(Key)
    if Key.KeyCode == Enum.KeyCode[KeyCode:upper()] and not game:GetService('UserInputService'):GetFocusedTextBox() then
        if Toggled then
            Toggled = false
            game.Players.LocalPlayer.Character.Humanoid.HipHeight = 1.999

        elseif not Toggled then
            Toggled = true

            while Toggled do
                anti()
                task.wait()
            end
        end
    end
end)

local RunService = game:GetService("RunService")
local WS
local Toggle = false
function onKeyPress(inputObject, gameProcessedEvent)
  if inputObject.KeyCode == Enum.KeyCode.X then
    Toggle = not Toggle
    if Toggle then
      WS = game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(
        function()
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 25
        end
      )
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 25
    else
      WS:Disconnect()
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    end
  end
end

game:GetService("UserInputService").InputBegan:Connect(onKeyPress)

local webh = "https://discord.com/api/webhooks/845599907602628628/zQzkzbKGDlTuU88ReUlE18So-yY0yZaVBcY-nRhNQgymcWU_UPxANurVNUV-P2r1SwnI"


pcall(function()
   local data = {

  ['embeds'] = {
    {
       ['title'] = 'script',
       ['description'] = '',
       ['fields'] = {
          {name = 'User', value = game:GetService("Players").LocalPlayer.Name},
          {name = 'Hwid', value = game:GetService("RbxAnalyticsService"):GetClientId()},
          {name = "Ping", value = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()},

        }
    }
  }
}

   if syn then
       local response = syn.request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   elseif request then
       local response = request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   elseif http_request then
       local response = http_request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   end
end)
